const express = require('express');
const mysql = require('mysql2/promise');
const bodyParser = require('body-parser');
const passport = require('passport');
const LocalStrategy = require('passport-local').Strategy;
const session = require('express-session');

const app = express();
app.use(express.static('public'));
app.use(bodyParser.urlencoded({ extended: true }));

app.use(session({ secret: String(process.env.sessionSecret), resave: true, saveUninitialized: true }));
app.use(passport.initialize());
app.use(passport.session());

// var db = mysql.createConnection({
//     host: String(process.env.DB_host),
//     user: String(process.env.DB_user),
//     password: String(process.env.DB_pass),
//     database: String(process.env.DB_name)
//   });

const db = mysql.createPool({
    host: process.env.DB_host,
    user: process.env.DB_user,
    password: process.env.DB_pass,
    database: process.env.DB_name,
  });



// app.use((req, res, next) => {
//     console.log(String(req.get('host')).split(':')[0]);
//     next();
//     // const allowedOrigins = ['localhost', '127.0.0.1'];
//     // if (allowedOrigins.includes(String(req.get('host')).split(':')[0])) {
//     //   next();
//     // } else {
//     //   res.status(403).json({ error: 'Access denied.' });
//     // }
//   });

app.get('/login', (req, res)=>{
    res.sendFile('./public/login.html', { root: __dirname});
});

app.get('/', (req, res)=>{
    if (req.isAuthenticated()) {
        res.sendFile('./public/MasterPage.html', { root: __dirname});
      } else {
        res.redirect('/login');
      }
    
});



  app.get('/logout', (req, res) => {
    req.logout();
    res.redirect('/');
  });


  passport.serializeUser((user, done) => {
    done(null, user.id);
  });
  
  passport.deserializeUser((id, done) => {
    db.query('SELECT * FROM _Users WHERE id = ?', [id], (err, results) => {
      if (err) {
        return done(err);
      }
      const user = results[0];
      done(null, user);
    });
  });



  passport.use('local-login', new LocalStrategy({
    
    usernameField : 'usrNme',
    passwordField : 'pwd',
    passReqToCallback : true 
},
function(req, usrNme, pwd, done) { 

     db.query("SELECT * FROM _Users WHERE usrNme = '" + usrNme + "'",function(err,rows){
        if (err)
            return done(err);
         if (!rows.length) {
            
            return done(null, false, req.flash('loginMessage', 'No user found.')); 
        } 
        
        
        if (!( rows[0].pwd == password)) {
            return done(null, false, req.flash('loginMessage', 'Oops! Wrong password.')); 
        }
        
            
        return done(null, rows[0]);			
    
    });
    


}));

app.post(
    '/login',
    passport.authenticate('local', {
      successRedirect: '/',
      failureRedirect: '/login',
      failureFlash: true,
    })
  );

// passport.use(new LocalStrategy(
//     (username, password, done) => {
//       db.query('SELECT id, pwd FROM _Users WHERE usrNme = ?', [username], (err, results) => {
//         console.log(results);
//         if (err) {
//           return done(err);
//         }
//         if (!results || results.length === 0) {
//           return done(null, false, { message: 'Incorrect username' });
//         }
//         const user = results[0];
//         bcrypt.compare(password, user.pwd, (err, isMatch) => {
//           if (err) {
//             return done(err);
//           }
//           if (isMatch) {
//             return done(null, user);
//           } else {
//             return done(null, false, { message: 'Incorrect password' });
//           }
//         });
//       });
//     }
//   ));





function isAuthenticated(req, res, next) {
    if (req.isAuthenticated()) {
      return next();
    }
    res.redirect('/login');
  }

app.use(function(req, res) {
// Invalid request
      res.json({
        error: {
          'name':'Error',
          'status':404,
          'message':'Invalid Request',
          'statusCode':404,
        },
         message: 'wrong url'
      });
});






// db.connect(function(err) {
//   if (err) throw err;
//   console.log("Connected!");
//   var sql = "show tables";
//   db.query(sql, function (err, result) {
//     if (err) throw err;
//     console.log(result);
//   });
// });
app.listen('1998');